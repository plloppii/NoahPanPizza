version: '3.7'

services:
    web:
        build:
            context: ./noahpanpizza
            dockerfile: Dockerfile.prod
        image: plloppii/web:latest
        command: gunicorn noahpanpizza.wsgi:application --bind 0.0.0.0:8000
        volumes:
            - static_volume:/home/app/web/static
            - media_volume:/home/app/web/media
        expose:
            - 8000
        env_file:
            - ./.env.prod
        extra_hosts:
            db: 172.104.10.73
    nginx:
        build: ./nginx
        image: plloppii/nginx:latest
        volumes:
            - static_volume:/home/app/web/static
            - media_volume:/home/app/web/media
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        ports:
            - 80:80
            - 443:443
        depends_on:
            - web
    certbot:
        image: certbot/certbot:v0.36.0
        volumes:
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    # Use if dockerize database is necessary
    # db:
    #     image: postgres:12.0-alpine
    #     volumes:
    #         - postgres_data:/var/lib/postgresql/data/
    #     env_file:
    #         - ./.env.prod.db
volumes:
    static_volume:
    media_volume: