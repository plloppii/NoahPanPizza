###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.3-alpine as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
# RUN apk add --update --no-cache --virtual .tmp gcc libc-dev \
#     openssl-dev python3-dev musl-dev 
RUN apk add --update gcc libc-dev \
    zlib-dev jpeg-dev postgresql-dev \
    openssl-dev python3-dev musl-dev \
    libxml2 libxslt-dev libffi-dev

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

#########
# FINAL #
#########

# pull official base image
FROM python:3.8.3-alpine

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME $APP_HOME/static $APP_HOME/media
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq \
    jpeg-dev libxslt-dev libffi-dev \
    py-flake8

# copy project
COPY . $APP_HOME
RUN flake8 --exclude=venv --ignore=E501,F401 $APP_HOME

COPY --from=builder /usr/src/app/wheels /wheels
RUN pip install --upgrade pip && \
    pip install --no-cache /wheels/*

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]