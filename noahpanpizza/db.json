[{"model": "blog.post", "pk": 1, "fields": {"title": "Migrating Django Web Application from SQLite to PostgreSQL on Ubuntu and MacOS", "content": "<p><span style=\"font-size:20px\">I recently migrated my blog (which you are currently on) from using the stock SQLite database that the Django framework comes with, to PostgreSQL.&nbsp;<br />\r\nMy main motivation was to be able to store more datatypes with PostgreSQL, specifically a JSONField within my store backend. Being able to store a JSON object&nbsp;inside a relational database can be advantageous, especially when parsing it back to a python dict.&nbsp;<br />\r\nDjango also has a list of PostgreSQL specific model fields <a href=\"https://docs.djangoproject.com/en/3.1/ref/contrib/postgres/fields/\">here</a><br />\r\nTableplus also has a <a href=\"https://tableplus.com/blog/2018/08/sqlite-vs-postgresql-which-database-to-use-and-why.html\">blog post</a>&nbsp;that lists use cases for SQLite and PostgreSQL, highlighting the security and customization of the latter.</span></p>\r\n\r\n<p><span style=\"font-size:20px\">SQLite is highly useful for:</span></p>\r\n\r\n<ul>\r\n\t<li><span style=\"font-size:20px\">Standalone apps</span></li>\r\n\t<li><span style=\"font-size:20px\">Small apps that don&rsquo;t require expansion.</span></li>\r\n\t<li><span style=\"font-size:20px\">Apps need to read or write files to disk directly.</span></li>\r\n\t<li><span style=\"font-size:20px\">The internet of things devices</span></li>\r\n\t<li><span style=\"font-size:20px\">Developing and even testing:</span></li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:20px\">PostgreSQL is recommended when:</span></p>\r\n\r\n<ul>\r\n\t<li><span style=\"font-size:20px\">Data integrity and reliability is highly concerned.</span></li>\r\n\t<li><span style=\"font-size:20px\">Custom Procedures which is extensible to run the complex task.</span></li>\r\n\t<li><span style=\"font-size:20px\">Complexity with ease. PostgreSQL gives you the functionality to maintain such a complex database smoothly without limitations.</span></li>\r\n</ul>\r\n\r\n<p><span style=\"font-size:20px\"><strong>Django Boilerplate Setup</strong></span></p>\r\n\r\n<p><span style=\"font-size:20px\">Assuming you already know/ have a Django web application running, virtual environment setup, and are ready to port from SQLite over to PostgreSQL.&nbsp;<br />\r\nLocate your setting.py page and add this to the DATABASES array</span></p>\r\n\r\n<pre>\r\n<code>    'default': {\r\n        'ENGINE': 'django.db.backends.postgresql',\r\n        'NAME': '&lt;database_name&gt;',\r\n        'USER': \"&lt;db_username&gt;,\r\n        'PASSWORD': \"&lt;db_password\",\r\n        'HOST': '127.0.0.1',\r\n        'PORT': '5432', \r\n    }</code></pre>\r\n\r\n<p><span style=\"font-size:20px\">I would reccomend injecting the database username and password from a local json file within your server so that it is isolated from git tracked files. (Place it in /etc/config.json)<br />\r\nRun migration commands to apply the changes.&nbsp;</span></p>\r\n\r\n<pre>\r\n<code>python manage.py makemigrations\r\npython manage.py migrate</code></pre>\r\n\r\n<p>If you currently have data inside of your SQLite database and you would like to migrate the data over, run the following command to store the data into a json file, to be ported to Postgres later.</p>\r\n\r\n<pre>\r\n<code>python manage.py dumpdata &gt; datamigration.json</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:20px\"><strong>Ubuntu 16.04 Setup</strong></span></p>\r\n\r\n<p><span style=\"font-size:20px\">My server is running on an Ubuntu 16.04 OS image on Linode. To get PostgreSQL setup, first install the following packages.</span></p>\r\n\r\n<pre>\r\n<code>sudo apt install postgresql postgresql-contrib</code></pre>\r\n\r\n<p><span style=\"font-size:20px\">PostgreSQL is now installed. It is a UNIX service in Debian/ Ubuntu. Start the service with:</span></p>\r\n\r\n<pre>\r\n<code>sudo service postgresql start</code></pre>\r\n\r\n<p><span style=\"font-size:20px\">Activate the postgresql shell with the following command</span></p>\r\n\r\n<pre>\r\n<code>sudo -u postgres psql</code></pre>\r\n\r\n<p><span style=\"font-size:20px\">And thats it! Skip to the database setup section</span></p>\r\n\r\n<p><span style=\"font-size:20px\"><strong>MacOS Setup</strong></span></p>\r\n\r\n<p><span style=\"font-size:20px\">To get PostgreSQL working on MacOS, the setup is slightly different. I had to get it working on my Mac device as that is where i do my development.&nbsp;<br />\r\nInstall postgres with your Mac package manager (I use brew).</span></p>\r\n\r\n<pre>\r\n<code>brew install postgres\r\npostgres --version</code></pre>\r\n\r\n<p><span style=\"font-size:20px\">After insuring that it is installed, we need to initialize a database hard-disk location for postgres. (You can place this close to your Djangoapp directory, just not within the same git project.)</span></p>\r\n\r\n<pre>\r\n<code>initdb /usr/local/var/postgres</code></pre>\r\n\r\n<p><span style=\"font-size:20px\">Start the database by pointing to the database folder location.</span></p>\r\n\r\n<pre>\r\n<code>pg_ctl -D /usr/local/var/postgres start</code></pre>\r\n\r\n<p><span style=\"font-size:20px\">Run the following command to gain access to the postgresql shell</span></p>\r\n\r\n<pre>\r\n<code>psql postgres</code></pre>\r\n\r\n<p><span style=\"font-size:20px\">Now you are ready to setup a database for the Django app.&nbsp;</span></p>\r\n\r\n<p><span style=\"font-size:20px\"><strong>PostgreSQL Database Setup</strong></span></p>\r\n\r\n<p><span style=\"font-size:20px\">Now that PostgreSQL is installed on your host machine, we need to now set things up for the Django application.&nbsp;<br />\r\nIn the postgres Shell, run the following to create a database and user/role for the Django app.</span></p>\r\n\r\n<pre>\r\n<code>CREATE DATABASE &lt;database_name&gt;;\r\nCREATE USER &lt;db_user&gt; WITH PASSWORD \"&lt;db_password\";\r\n</code></pre>\r\n\r\n<p>Dont forget the semi-colen at the end of the command, Postgres wont recognize the command unless you put it there.&nbsp;<br />\r\nOther useful commands</p>\r\n\r\n<pre>\r\n<code>DROP DATABASE &lt;database_name&gt;;\r\nDROP USER &lt;username&gt;;</code></pre>\r\n\r\n<p><span style=\"font-size:20px\">To check if things were created successfully, run</span></p>\r\n\r\n<pre>\r\n<code>\\l # List all Databases\r\n\\dg # List all Users/ Roles</code></pre>\r\n\r\n<p>If you stored your previous data from SQLite inside a json file, run the following to apply the old data to the new PostgreSQL database:</p>\r\n\r\n<pre>\r\n<code>python3 manage.py loaddata datadump.json</code></pre>\r\n\r\n<p>If you get an error saying:</p>\r\n\r\n<pre>\r\n<code>DETAIL:  Key (app_label, model)=(admin, logentry) already exists.</code></pre>\r\n\r\n<p>You will need to clear the contenttype objects by running:</p>\r\n\r\n<pre>\r\n<code>python manage.py shell\r\n\r\n&gt;&gt;&gt; from django.contrib.contenttypes.models import ContentType\r\n&gt;&gt;&gt; ContentType.objects.all().delete()</code></pre>\r\n\r\n<p>Re-run the loaddata command and you should be good to go!</p>\r\n\r\n<p>Congrats, thats it! You migrated from SQLite over to PostgreSQL!</p>", "date_posted": "2020-10-25T21:31:31.797Z", "active": true, "featured": false, "slug": "migrating-django-web-application-from-sqlite-to-postgresql-on-ubuntu-and-macos", "readtime": "5 min read"}}, {"model": "blog.post", "pk": 2, "fields": {"title": "Consistency During Programming", "content": "<p><span style=\"font-size:16px\">If you haven&#39;t known already, I swam competitively for 16 years of my life and I am a ex-collegiate swimmer. During college, I was dedicating over 15&nbsp;hours weekly to training, whether it be in the pool or in the weight training room. There are many things that swimming has taught me, and the most vital lesson that the sport has taught me is that consistency is an imperative ingredient for success.&nbsp;</span></p>\r\n\r\n<p><span style=\"font-size:16px\">Over the course of my swimming career, my team and I&nbsp;would do thousands of laps in the pool, endure grueling workouts on intense intervals, and lift weights that are multiples of our weight. We would practice and practice until swimming fast became a natural instict. Something that we lived and breathed. Similar to swimming, I find that programming requires&nbsp;the same amount of dedication and commitment to become great at it. Only after consistant&nbsp;trial and error, failure, and experimentation can I become fluent at a specific programming language or framework. And similar&nbsp;to swimming up and down the pool, if I decide to take a few days off from reading code, I quickly find myself forgetting basic syntax and methodologies, slowing down my productivity. As swimming is more about building strength and muscle memory, where&nbsp;coding&nbsp;is about brain capacity and forming strong brain neural connection, the requirements to succeed in these two subjects simply boils down to the same basic principle.&nbsp;</span></p>\r\n\r\n<p>&quot;Success isn&#39;t always about greatness. It&#39;s about consistency. Consistent hard work leads to success. Greatness will come.&quot; -Dwayne Johnson</p>\r\n\r\n<p>&nbsp;</p>", "date_posted": "2020-10-27T01:46:01.159Z", "active": true, "featured": false, "slug": "consistency-during-programming", "readtime": "2 min read"}}, {"model": "blog.post", "pk": 3, "fields": {"title": "Hardware, Software, Content", "content": "<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">&ldquo;Hardware needs to be ahead of software, software needs to be ahead of content&rdquo;. </span></span></span></p>", "date_posted": "2020-11-13T19:38:12.610Z", "active": false, "featured": false, "slug": "hardware-software-content", "readtime": "1 min read"}}, {"model": "blog.post", "pk": 4, "fields": {"title": "Django Web Application Migration to Docker with Postgres, Nginx, Gunicorn Part 1", "content": "<p><strong>What is Docker?</strong></p>\r\n\r\n<p>Docker, Kubernetes, Containers, CI/CD: are all terms that I have come across but never had the opportunity to research or implement further.<br />\r\nI have finally gotten to a point&nbsp;of satisfaction with the front and back end of my Django Web application, that I have&nbsp;decided it was time to migrate the to containers!</p>\r\n\r\n<p>After gaining experience in deploying a traditional website on a UNIX server, I certainly found issues with speed of deployment. The setup for the server environment was fragile and required alot of overhead. Docker solves this by automating that overhead and environment setup. Docker provides the ability to create lightweight images, and deploy instances of that image (aka container)&nbsp;rapidly on a local development machine or production server. It is just simply more scalable.&nbsp;</p>\r\n\r\n<p>The whole idea of a container is the virtualization of a OS. The linux distribution for running on a container is usually Alpine, which is magnitudes smaller than the popular compact distro, Fedora as seen in the figure below grabbed from <a href=\"https://hackernoon.com/you-should-use-alpine-linux-instead-of-ubuntu-yb193ujt\">this post.&nbsp;</a></p>\r\n\r\n<figure class=\"image\"><img alt=\"\" height=\"88\" src=\"https://firebasestorage.googleapis.com/v0/b/hackernoon-app.appspot.com/o/images%2FeCOwFf8MXSXFKFDoIrM9BtMlAJP2-tbz3u3k.jpeg?alt=media&amp;token=db587d2c-6504-43c5-84a7-2e852a781b59\" width=\"352\" />\r\n<figcaption>Figure 1. Distribution Size Comparison</figcaption>\r\n</figure>\r\n\r\n<p>This write-up is not a complete guide, but a brief summary of important concepts/ details I found important for containerizing a python/ django application. The guide I followed in this write up was written by the great Michael Herman and can be found <a href=\"https://testdriven.io/blog/dockerizing-django-with-postgres-gunicorn-and-nginx/#production-dockerfile\">here.</a></p>\r\n\r\n<p>General Steps:</p>\r\n\r\n<ol>\r\n\t<li>Refactor Django settings.py to graph shell environment variables instead of hard-coded values</li>\r\n\t<li>Create Dockerfile and docker-compose.yml for basic development container spin up</li>\r\n\t<li>Implement Postgres docker volume</li>\r\n\t<li>Add Gunicorn for WSGI server</li>\r\n\t<li>Create Production Dockerfile and docker-compose.yml (multi-stage build)</li>\r\n\t<li>Add Nginx for reverse proxy&nbsp;</li>\r\n\t<li>Handle Static and Media Files through creation of volume in docker</li>\r\n</ol>\r\n\r\n<p>Docker vs Docker-compose</p>\r\n\r\n<p>Docker-compose is used to create images that can spin up multiple container instances.<br />\r\nCurrently, I created two docker compose files, one for production, one for development.&nbsp;</p>\r\n\r\n<p>Understanding Ports vs Expose in docker-compose</p>\r\n\r\n<p>Its important to understand how ports work in relation to the containers and host machine. Read about them here:&nbsp;https://stackoverflow.com/questions/40801772/what-is-the-difference-between-docker-compose-ports-vs-expose</p>\r\n\r\n<p>In summary, the ports definition within the docker-compose file specifies both host and container ports in the format of HOST:CONTAINER. Or only the container port can be specified and a random host port will be selected.&nbsp;</p>\r\n\r\n<pre>\r\n<code>ports: \r\n  - 3306</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>will yield a container with the output:</p>\r\n\r\n<pre>\r\n<code>Ports\r\n----------\r\n0.0.0.0:32581-&gt;3306/tcp</code></pre>\r\n\r\n<p>The expose definition is only for container to container port exposing. No ports will be exposed on the host machine, only linked services/containers will have access to those ports. Defining the following expose</p>\r\n\r\n<pre>\r\n<code>expose:\r\n  - 3306</code></pre>\r\n\r\n<p>will yield the following result in a container:</p>\r\n\r\n<pre>\r\n<code>Ports\r\n------\r\n3306/tcp</code></pre>\r\n\r\n<p>Use of Gunicorn and Nginx&nbsp;</p>\r\n\r\n<p>Gunicorn is a popular WSGI server for python applications. A comparison to mod_wsgi and UWSGI can be seen here:&nbsp;https://www.digitalocean.com/community/tutorials/django-server-comparison-the-development-server-mod_wsgi-uwsgi-and-gunicorn</p>\r\n\r\n<p>Gunicorn is easily implemented by installing through pip and adding it to your requirements.txt file so that the containiers you spin up will install it on spinup.</p>\r\n\r\n<pre>\r\n<code>pip install gunicorn\r\npip freeze &gt; requirements.txt\r\n# In requirements.txt it should have: (might be diff version)\r\ngunicorn==20.0.4\r\n</code></pre>\r\n\r\n<p>The replace the original command that spins up the django server with:</p>\r\n\r\n<pre>\r\n<code>#Original Command\r\npython manage.py runserver\r\n#Gunicorn start command\r\ngunicorn &lt;app_name&gt;.wsgi:application --bind 0.0.0.0:8000</code></pre>\r\n\r\n<p>Nginx is used as a reverse proxy so that gunicorn is not openly exposed on the webserver.</p>\r\n\r\n<p>nginx basically sits on the host machine as another container that stands between the client request and the web and db containers. Setup can be found in the Nginx section of <a href=\"https://testdriven.io/blog/dockerizing-django-with-postgres-gunicorn-and-nginx/\">this guide</a><br />\r\nIf done correctly, you will see two images created from the docker-compose file and two containers spin up. (one for the database, one for nginxm and one for the webserver)</p>\r\n\r\n<pre>\r\n<code>npan@Noahs-iMac DjangoApp % docker images\r\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\r\ndjangoapp_web       latest              48ff3cef0c10        9 minutes ago       485MB\r\ndjangoapp_nginx     latest              0ce785f5411d        41 minutes ago      133MB\r\n\r\nnpan@Noahs-iMac DjangoApp % docker ps -a\r\nCONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS              PORTS                    NAMES\r\n6148a5586933        djangoapp_nginx        \"/docker-entrypoint.\u2026\"   10 minutes ago      Up 10 minutes       0.0.0.0:1337-&gt;80/tcp     djangoapp_nginx_1\r\n5dfc2be26bc5        djangoapp_web          \"/home/app/web/entry\u2026\"   10 minutes ago      Up 10 minutes       8000/tcp                 djangoapp_web_1\r\n40b91232d91f        postgres:12.0-alpine   \"docker-entrypoint.s\u2026\"   10 minutes ago      Up 10 minutes       5432/tcp                 djangoapp_db_1</code></pre>\r\n\r\n<p>We can then use nginx to server static. Currently, when the client attempts to hit the webserver, static files cannot be found with gunicorn. It errors out when it is unable to find the defined STATIC_ROOT path.&nbsp;<br />\r\nWe can solve this by doing the following summary points: (more details see Static Files section in the&nbsp;<a href=\"https://testdriven.io/blog/dockerizing-django-with-postgres-gunicorn-and-nginx/\">guide</a>)</p>\r\n\r\n<ol>\r\n\t<li>Define the static volume inside docker-compose.yml file</li>\r\n\t<li>Create a static directory in the Dockerfile for BOTH the web and nginx service.&nbsp;</li>\r\n\t<li>Update the nginx.conf file to alias STATIC_ROOT url path to the file system path in the container.</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>", "date_posted": "2020-11-15T22:17:50.725Z", "active": true, "featured": false, "slug": "django-non-containerized-web-application-migration-to-docker-with-postgres-nginx-gunicorn", "readtime": "5 min read"}}, {"model": "blog.post", "pk": 5, "fields": {"title": "Django Web Application Migration to Docker with Postgres, Nginx, Gunicorn Part 2", "content": "<p>In the previous writeup, I migrated my django web application to docker on a local development machine. I now need to set up docker on the cloud service provider I use to host my website which is Linode.&nbsp;</p>\r\n\r\n<p>In Part 1, I followed a great guide created by Michael Herman that walked through using&nbsp;docker-compose to manage multiple docker container services. A good example of this would be maintaining a web application, database, and api service all through one docker-compose file.&nbsp;</p>\r\n\r\n<p>When attempting to deploy my docker-compose setup to my server, I could not find any good guides that explained the workflow of deploying to production with docker-compose. So I dove in myself and started exploring different possibilities.<br />\r\nI initially started by attempting to build the docker images from scratch from my server. I knew from the start that this was not the ideal workflow as rebuilding on the server would be&nbsp;redundant. Building docker images was resource and time intensive, and should be done on the development machine. I started reading about docker hub that acted as a docker image repository which you can pull and push to, similar to that of a git repository.&nbsp;</p>\r\n\r\n<p>I used docker hub to deploy to my server with the following steps:</p>\r\n\r\n<ol>\r\n\t<li>Install docker and docker-compose on the host server</li>\r\n\t<li>Make adjustments to the production docker-compose file</li>\r\n\t<li>Build and push images to hub on the development machine</li>\r\n\t<li>Pull and deploy image&nbsp;instances on host server</li>\r\n\t<li>Post Deployment/ Server Config Setup</li>\r\n</ol>\r\n\r\n<p><strong>Install docker and docker-compose on host server</strong></p>\r\n\r\n<p>While attempting to install docker on my server, I encountered and resolved the following error:</p>\r\n\r\n<pre>\r\n<code>sudo apt-get install docker.io\r\n\r\nnpan@django-server:~/NoahPanPizza$ docker images\r\nGot permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.39/images/json: dial unix /var/run/docker.sock: connect: permission denied\r\n\r\nsudo setfacl --modify user:&lt;username&gt;:rw /var/run/docker.sock</code></pre>\r\n\r\n<p>To install docker-compose, follow this guide here:&nbsp;https://docs.docker.com/compose/install/</p>\r\n\r\n<p><strong>Make adjustments to the production docker-compose file</strong></p>\r\n\r\n<p>Some modifications are to be done to the docker-compose file before building deploying.&nbsp;</p>\r\n\r\n<pre>\r\n<code>version: '3.7'\r\n\r\nservices:\r\n    web:\r\n        build:\r\n            context: ./noahpanpizza\r\n            dockerfile: Dockerfile.prod\r\n        command: gunicorn noahpanpizza.wsgi:application --bind 0.0.0.0:8000\r\n        volumes:\r\n            - static_volume:/home/app/web/static\r\n            - media_volume:/home/app/web/media\r\n        expose:\r\n            - 8000\r\n        env_file:\r\n            - ./.env.prod\r\n        extra_hosts:\r\n            db: 172.104.10.73\r\n        image: plloppii/web:latest\r\n    nginx:\r\n        build: ./nginx\r\n        volumes:\r\n            - static_volume:/home/app/web/static\r\n            - media_volume:/home/app/web/media\r\n        ports:\r\n            - 1337:80\r\n        depends_on:\r\n            - web\r\n        image: plloppii/nginx:latest\r\n    # Use if dockerize database is necessary\r\n    # db:\r\n    #     image: postgres:12.0-alpine\r\n    #     volumes:\r\n    #         - postgres_data:/var/lib/postgresql/data/\r\n    #     env_file:\r\n    #         - ./.env.prod.db\r\nvolumes:\r\n    static_volume:\r\n    media_volume:</code></pre>\r\n\r\n<p>A few things to note here:</p>\r\n\r\n<ol>\r\n\t<li>I decided to comment out my database service, as I wanted to retain using the postgres service on my local server host.&nbsp;</li>\r\n\t<li>Add extra_host argument, to define the hostname of the database and provide the IP address of the server.</li>\r\n\t<li>Define a image attribute for each service with the format of&nbsp;</li>\r\n</ol>\r\n\r\n<pre>\r\n<code>image: &lt;dockerhub_id&gt;/&lt;service_name&gt;:&lt;image_tag&gt;</code></pre>\r\n\r\n<p><strong>Build and push images on the development machine</strong></p>\r\n\r\n<pre>\r\n<code># Build the docker image on dev machine\r\ndocker-compose -f docker-compose.prod.yml build\r\n\r\n# Push docker image to hub\r\ndocker-compose -f docker-compose.prod.yml push\r\n</code></pre>\r\n\r\n<p>Note: You have to define the image attribute in the docker-compose.yml file or else push will not work.&nbsp;</p>\r\n\r\n<p><strong>Pull and deploy image instances on host server</strong></p>\r\n\r\n<pre>\r\n<code># On the host server, pull the image down. \r\ndocker-compose -f docker-compose.prod.yml pull\r\n\r\n# Spin up the container instances on the server\r\ndocker-compose -f docker-compose.prod.yml up -d</code></pre>\r\n\r\n<p><strong>Post Deployment/ Server Config Setup</strong></p>\r\n\r\n<p>A few things need to be done to allow the containers to be accessed successfully on the server.&nbsp;<br />\r\nLocate the postgresql.conf and pg_hba.conf file</p>\r\n\r\n<pre>\r\n<code># add the following line to pg_hba.conf to allow for connections to the server on all IPs with authentication\r\nhost\tall\t\tall\t\t0.0.0.0/0\t\tmd5\r\n\r\n# modify the listen_addresses in postgresql.conf\r\nlisten_addresses = '*'\r\n\r\n#restart the postgresql service\r\nsudo service postgresql restart\r\n</code></pre>\r\n\r\n<p>If you have a firewall running currently, you will need to enable traffic through two ports, 1337 for nginx, and 5432 for database access.<br />\r\nMy status report for my server running ufw is as follows:</p>\r\n\r\n<pre>\r\n<code>Status: active\r\n\r\nTo                         Action      From\r\n--                         ------      ----\r\n22                         ALLOW       Anywhere                  \r\n80/tcp                     ALLOW       Anywhere                  \r\n587                        DENY        Anywhere                  \r\n25                         DENY        Anywhere                  \r\n80                         DENY        Anywhere                  \r\n8000                       ALLOW       Anywhere                  \r\n443                        ALLOW       Anywhere                  \r\n1337                       ALLOW       Anywhere                  \r\n5432                       ALLOW       Anywhere                  \r\n22 (v6)                    ALLOW       Anywhere (v6)             \r\n80/tcp (v6)                ALLOW       Anywhere (v6)             \r\n587 (v6)                   DENY        Anywhere (v6)             \r\n25 (v6)                    DENY        Anywhere (v6)             \r\n80 (v6)                    DENY        Anywhere (v6)             \r\n8000 (v6)                  ALLOW       Anywhere (v6)             \r\n443 (v6)                   ALLOW       Anywhere (v6)             \r\n1337 (v6)                  ALLOW       Anywhere (v6)             \r\n5432 (v6)                  ALLOW       Anywhere (v6) </code></pre>\r\n\r\n<p>You should now be able to access the containers through the nginx port, 1337.&nbsp;</p>\r\n\r\n<p><strong>Useful debugging commands</strong></p>\r\n\r\n<pre>\r\n<code># View all containers up\r\ndocker ps -a\r\n\r\n# View logs of the container\r\ndocker logs &lt;container_hash&gt;</code></pre>\r\n\r\n<p><strong>Next steps</strong></p>\r\n\r\n<p>With the current configuration, the user has access to the docker containers through port 1337. If the user enters through port 80, they are still going through the old apache setup. The follow still needs to be done to complete the migration.</p>\r\n\r\n<ul>\r\n\t<li>We will need to map nginx to serve the containers up on port 80 or 443 for SSL encryption.&nbsp;</li>\r\n\t<li>Static and media files are still unavailable and will need to be migrated from the old server locations to the mounted static and media volumes on docker.&nbsp;</li>\r\n\t<li>For both configuration files, pg_hba.conf and postgresql.conf, the allowed connections to the postgres server and listen_address should be narrowed down to only accept the subnet of the docker container. This will allow things to be more secure.&nbsp;</li>\r\n</ul>", "date_posted": "2020-12-07T18:24:37.445Z", "active": true, "featured": false, "slug": "django-web-application-migration-to-docker-with-postgres-nginx-gunicorn-part-2", "readtime": "5 min read"}}, {"model": "projects.project", "pk": 1, "fields": {"title": "re:3D Touchscreen Interface", "description": "a large screen for a large machine", "content": "<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\"><strong>Design Motivation</strong></span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">The re:3D Gigabot is an affordable, large-scale, industrial 3-D Printer that delivers in print quality and speed (Figure 1).&nbsp;</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">The Gigabot&rsquo;s size is impressive at 3ft x 3ftx 4ft, expanding the possibilities of what can be printed, from home furniture to auto parts. The Gigabot is paired with a small control interface with a 3&rdquo; LCD screen, that seems disproportionate relative to the size of the overall machine. This control interface is the single largest bottle-neck to providing a streamline 3-D Printing experience on the re:3D Gigabot.&nbsp;</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">The stock control interface on Gigabot is a Viki2 LCD screen which is a colorless, 128x64 pixelated screen and a scroll wheel knob for navigation which is standard among DIY/ Maker-level 3-D Printers. These screens are cheap, easily manufactured, and pair well with the common 8-bit Atmega hardware architecture. The Gigabot is in a different size class and pairing it with a controller meant for desktop sized printers will only degrade from the overall experience of using the Gigabot.&nbsp;</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">Bad UX Components:</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">1) Relative Position - The LCD is placed on the rear corner of the machine. 3-D printing often requires the user to make small incremental changes to adjust real-time print behavior. The position forces the user to walk around the machine to adjust a setting, then walk back in front of the machine to observe the machine print behavior, causing a chopping and frustrating experience.&nbsp;</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">2) The LCD Screen - The LCD has a pixel resolution of 128x64. The combination of the low pixel density and small screen size make it extremely difficult to extract information out of the Gigabot. It forces users with poor eyesight to either squint or bend down to be able to read the information on the control screen.&nbsp;</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">3) The Scroll Wheel - The 1&rdquo; scroll wheel is the single user input for menu selection. Every desired action requires the user to scroll through and select from </span></span></span><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\"><strong>at least</strong></span></span></span><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\"> one menu. The sensitivity of the wheel causes users to scroll past or click on the wrong menu setting. The time it takes to accomplish even the simplest tasks with the current hardware adds to the list of lacking UX components on the control interface.&nbsp;</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">4) Micro SD Card - Ironically, the </span></span></span><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\"><strong>Giga</strong></span></span></span><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">bot uses a </span></span></span><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\"><strong>Micro</strong></span></span></span><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">SD card to transfer print files from a user&rsquo;s desktop to the 3-D Printer. The MicroSD cards are extremely small (10x15mm) and are easily misplaced. Inserting the MicroSD card into the Viki2 is a stressful process as the card is very delicate and does not inspire confidence in the user.&nbsp;</span></span></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\"><strong>Hardware Selection</strong></span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">The hardware selection for a new Gigabot control interface lays the foundation for the development of both software and content in the future. Hardware selection can affect product life cycle, software performance, and most importantly user experience. The table below extrapolates the lacking UX components to the desired hardware that would provide a better 3-D Printing experience.&nbsp;</span></span></span></p>\r\n\r\n<div>\r\n<table cellspacing=\"0\" style=\"border-collapse:collapse; border:none; width:624px\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"border-bottom:2px solid #000000; border-left:2px solid #000000; border-right:2px solid #000000; border-top:2px solid #000000; vertical-align:top; width:96px\">&nbsp;</td>\r\n\t\t\t<td style=\"border-bottom:2px solid #000000; border-left:2px solid #000000; border-right:2px solid #000000; border-top:2px solid #000000; vertical-align:top; width:228px\">\r\n\t\t\t<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">Old Control Interface</span></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"border-bottom:2px solid #000000; border-left:2px solid #000000; border-right:2px solid #000000; border-top:2px solid #000000; vertical-align:top; width:300px\">\r\n\t\t\t<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">What do we want?</span></span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"border-bottom:2px solid #000000; border-left:2px solid #000000; border-right:2px solid #000000; border-top:2px solid #000000; vertical-align:top; width:96px\">\r\n\t\t\t<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">Mounting</span></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"border-bottom:2px solid #000000; border-left:2px solid #000000; border-right:2px solid #000000; border-top:2px solid #000000; vertical-align:top; width:228px\">\r\n\t\t\t<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">Rear Mounted, Static, No adjustability&nbsp;</span></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"border-bottom:2px solid #000000; border-left:2px solid #000000; border-right:2px solid #000000; border-top:2px solid #000000; vertical-align:top; width:300px\">\r\n\t\t\t<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">Front Mounted, 3-D Printed Mount with 2 degrees of adjustability</span></span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"border-bottom:2px solid #000000; border-left:2px solid #000000; border-right:2px solid #000000; border-top:2px solid #000000; vertical-align:top; width:96px\">\r\n\t\t\t<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">Screen</span></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"border-bottom:2px solid #000000; border-left:2px solid #000000; border-right:2px solid #000000; border-top:2px solid #000000; vertical-align:top; width:228px\">\r\n\t\t\t<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">3&rdquo; LCD Screen</span></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"border-bottom:2px solid #000000; border-left:2px solid #000000; border-right:2px solid #000000; border-top:2px solid #000000; vertical-align:top; width:300px\">\r\n\t\t\t<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">7&rdquo;+ Colored IPS Panel</span></span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"border-bottom:2px solid #000000; border-left:2px solid #000000; border-right:2px solid #000000; border-top:2px solid #000000; vertical-align:top; width:96px\">\r\n\t\t\t<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">User Input</span></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"border-bottom:2px solid #000000; border-left:2px solid #000000; border-right:2px solid #000000; border-top:2px solid #000000; vertical-align:top; width:228px\">\r\n\t\t\t<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">1&rdquo; Scroll Wheel</span></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"border-bottom:2px solid #000000; border-left:2px solid #000000; border-right:2px solid #000000; border-top:2px solid #000000; vertical-align:top; width:300px\">\r\n\t\t\t<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">Touchscreen</span></span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"border-bottom:2px solid #000000; border-left:2px solid #000000; border-right:2px solid #000000; border-top:2px solid #000000; vertical-align:top; width:96px\">\r\n\t\t\t<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">File Transfer</span></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"border-bottom:2px solid #000000; border-left:2px solid #000000; border-right:2px solid #000000; border-top:2px solid #000000; vertical-align:top; width:228px\">\r\n\t\t\t<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">MicroSD Card</span></span></span></p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"border-bottom:2px solid #000000; border-left:2px solid #000000; border-right:2px solid #000000; border-top:2px solid #000000; vertical-align:top; width:300px\">\r\n\t\t\t<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">USB Stick</span></span></span></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n</div>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">The envisioned product would provide a snappy, touch operated control interface that would maintain all core functionality from the legacy LCD with additional features that take advantage of the new hardware.&nbsp;</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">The hardware selected was the Raspberry Pi 3 Model B+ paired with the Raspberry Pi 7&rdquo; </span></span></span><span style=\"font-size:10.5pt\"><span style=\"font-family:Arial\"><span style=\"color:#111111\"><span style=\"background-color:#ffffff\">800 x 480 </span></span></span></span><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">Color Touchscreen.&nbsp;</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\"><strong>Software and Framework Selection</strong></span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">Python, Octoprint</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">Qt/ QML, QtCreator</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">Custom Linux OS, originated from Raspbian&nbsp;</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">Software Goals:</span></span></span><br />\r\n<span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">- Scalable Application</span></span></span><br />\r\n<span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">- Loosely coupled architecture</span></span></span><br />\r\n<span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">- Minimize the number of code bases developers need to maintain</span></span></span><br />\r\n<span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">- Popular languages where talent can be found for development</span></span></span><br />\r\n<span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">- Portability, being able to port application to different OS or hardware if necessary</span></span></span><br />\r\n<span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">- Compatibility, in terms of API, we are using Octoprint which constraints around designing around Python modules.&nbsp;</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\"><strong>Software Note:</strong></span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">The early prototype menu screen consisted of simple, black and white icons picked out from open-source clip-art images. The UI was designed within Qt Creator, and its handy ability to turn widget objects into source files to be wired to a back end. The process of turning a UI file into a python file consisted of running:</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">pyuic5 touchscreen.ui -o touchscreen.py</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">This command was adapted into a makefile as the application scaled. The early prototype lacked printing functionality and was only able to send G-Code (3-D printer machine API) to the 3-D Printer. Nonetheless, the application was able to move the machine toolhead around, and set printing temperatures rapidly. The initial feedback from users indicated that the interface is monumentally easier to use than the legacy LCD screen.&nbsp;&nbsp;&nbsp;</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\"><strong>Early Prototype</strong></span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">The initial wireframe of the product was created within 3 months and consisted of a very simple, black and white UI. The initial arrangement and form of the icons in early prototypes were changed frequently. I am very conscious about letting user data and feedback drive critical design decisions. I went down the employee list and placed the early re:3D Touchscreen prototype in front of them, and let them use the product, without any verbal or physical interference. This gave me insight on valuable feedback on initial actions/ thoughts on the design. This strategy highlighted icons and pages that caused confusion.</span></span></span></p>\r\n\r\n<div style=\"text-align:center\">\r\n<figure class=\"image\" style=\"display:inline-block\"><img alt=\"\" height=\"266\" src=\"/media/ckeditor/2020/11/06/68747470733a2f2f692e696d6775722e636f6d2f303072625a764b2e706e67.png\" width=\"441\" />\r\n<figcaption>Figure 1. Early Menu Prototype</figcaption>\r\n</figure>\r\n</div>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">I believe that a product is designed well when it is intuitive enough to use without any assistance from a &quot;manual&quot;. The learning curve should be very fast, and a user should be able to figure out how to use the product through the designed signifiers.&nbsp;</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\">&nbsp;</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11pt\"><span style=\"font-family:Arial\"><span style=\"color:#000000\"><strong>Beta Product/ Launch</strong></span></span></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>", "thumbnail": "project/thumbnails/IMG_4758.jpg", "date_posted": "2020-11-05T00:08:47.155Z", "active": true, "featured": false, "slug": "re3d-touchscreen-interface"}}, {"model": "projects.project", "pk": 2, "fields": {"title": "Driving a DuckieBot with a Tennis Ball", "description": "having fun with the OpenCV!", "content": "<p>&nbsp;</p>\r\n\r\n<div data-oembed-url=\"https://www.youtube.com/watch?v=VEGZbk0O0J0\">\r\n<div style=\"height:0; left:0; padding-bottom:56.25%; position:relative; width:100%\"><iframe allow=\"encrypted-media; accelerometer; clipboard-write; gyroscope; picture-in-picture\" allowfullscreen=\"\" scrolling=\"no\" src=\"https://www.youtube.com/embed/VEGZbk0O0J0?rel=0\" style=\"border: 0; top: 0; left: 0; width: 100%; height: 100%; position: absolute;\"></iframe></div>\r\n</div>\r\n\r\n<p>&nbsp;</p>", "thumbnail": "project/thumbnails/Screen_Shot_2020-11-05_at_9.29.24_PM.png", "date_posted": "2020-11-05T01:02:49.938Z", "active": true, "featured": false, "slug": "driving-a-duckiebot-with-a-tennis-ball"}}, {"model": "projects.project", "pk": 3, "fields": {"title": "Designing a Checkout Experience", "description": "using Paypal API, AJAX, and JQuery", "content": "", "thumbnail": "project/thumbnails/Screen_Shot_2020-11-05_at_10.50.18_PM.png", "date_posted": "2020-11-06T00:50:29.231Z", "active": true, "featured": false, "slug": "designing-a-checkout-experience"}}, {"model": "projects.project", "pk": 5, "fields": {"title": "adsad", "description": "qwdas", "content": "<p>asdqwd</p>", "thumbnail": "", "date_posted": "2020-11-14T16:39:53.009Z", "active": false, "featured": false, "slug": "adsad"}}, {"model": "store.product", "pk": 1, "fields": {"name": "Eddie", "description": "eddie loves toothpicks", "thumbnail": "store/thumbnails/IMG_1522.jpeg", "price": "19.99", "quantity_instock": 1, "date_posted": "2020-11-06T01:44:24Z", "active": true, "featured": false, "slug": "eddie"}}, {"model": "store.product", "pk": 2, "fields": {"name": "Light Vader", "description": "Join the light side", "thumbnail": "store/thumbnails/IMG_1558.jpg", "price": "24.99", "quantity_instock": 1, "date_posted": "2020-11-13T19:51:52Z", "active": true, "featured": false, "slug": "light-vader"}}, {"model": "store.product", "pk": 3, "fields": {"name": "Speaker Stand", "description": "sdf", "thumbnail": "store/thumbnails/default.jpg", "price": "12.00", "quantity_instock": 1, "date_posted": "2020-12-14T17:43:18Z", "active": false, "featured": false, "slug": "speaker-stand"}}, {"model": "store.contactinfo", "pk": 1, "fields": {"first_name": "adf", "last_name": "asdf", "phone_number": "asdf", "email_address": "asdf"}}, {"model": "store.contactinfo", "pk": 2, "fields": {"first_name": "df", "last_name": "sdf", "phone_number": "sdf", "email_address": "sdf"}}, {"model": "store.contactinfo", "pk": 3, "fields": {"first_name": "Noah", "last_name": "Pan", "phone_number": "6463307800", "email_address": "noahpan323@gmail.com"}}, {"model": "store.billingaddress", "pk": 1, "fields": {"address1": "sdf", "address2": "", "country": "AF", "state": "sdf", "city": "sdf", "zipcode": "23"}}, {"model": "store.billingaddress", "pk": 2, "fields": {"address1": "5320 195th St.", "address2": "", "country": "US", "state": "New York", "city": "Fresh Meadows", "zipcode": "11364"}}, {"model": "store.billingaddress", "pk": 3, "fields": {"address1": "5320 195th St.", "address2": "", "country": "US", "state": "New York", "city": "Fresh Meadows", "zipcode": "11365"}}, {"model": "store.billingaddress", "pk": 4, "fields": {"address1": "5320 195th St", "address2": "", "country": "US", "state": "New York", "city": "Fresh Meadows", "zipcode": "11365"}}, {"model": "store.billingaddress", "pk": 5, "fields": {"address1": "5320 195th St.", "address2": "", "country": "US", "state": "NY", "city": "Fresh Meadows", "zipcode": "11364"}}, {"model": "store.billingaddress", "pk": 6, "fields": {"address1": "5320 195th St.", "address2": "", "country": "US", "state": "NY", "city": "Fresh Meadows", "zipcode": "11365"}}, {"model": "store.shippingaddress", "pk": 1, "fields": {}}, {"model": "store.shippingaddress", "pk": 2, "fields": {}}, {"model": "store.shippingaddress", "pk": 3, "fields": {}}, {"model": "store.shippingaddress", "pk": 4, "fields": {}}, {"model": "store.shippingaddress", "pk": 5, "fields": {}}, {"model": "store.shippingaddress", "pk": 6, "fields": {}}, {"model": "store.coupon", "pk": 1, "fields": {"coupon_code": "GET_FIFTEEN", "expiration_date": "2020-11-16T00:00:00Z", "discount": "15.00"}}, {"model": "contenttypes.contenttype", "pk": 1, "fields": {"app_label": "users", "model": "profile"}}, {"model": "contenttypes.contenttype", "pk": 2, "fields": {"app_label": "blog", "model": "post"}}, {"model": "contenttypes.contenttype", "pk": 3, "fields": {"app_label": "projects", "model": "project"}}, {"model": "contenttypes.contenttype", "pk": 4, "fields": {"app_label": "leads", "model": "lead"}}, {"model": "contenttypes.contenttype", "pk": 5, "fields": {"app_label": "store", "model": "cartitem"}}, {"model": "contenttypes.contenttype", "pk": 6, "fields": {"app_label": "store", "model": "cart"}}, {"model": "contenttypes.contenttype", "pk": 7, "fields": {"app_label": "store", "model": "product"}}, {"model": "contenttypes.contenttype", "pk": 8, "fields": {"app_label": "store", "model": "billingaddress"}}, {"model": "contenttypes.contenttype", "pk": 9, "fields": {"app_label": "store", "model": "shippingaddress"}}, {"model": "contenttypes.contenttype", "pk": 10, "fields": {"app_label": "store", "model": "contactinfo"}}, {"model": "contenttypes.contenttype", "pk": 11, "fields": {"app_label": "admin", "model": "logentry"}}, {"model": "contenttypes.contenttype", "pk": 12, "fields": {"app_label": "auth", "model": "permission"}}, {"model": "contenttypes.contenttype", "pk": 13, "fields": {"app_label": "auth", "model": "group"}}, {"model": "contenttypes.contenttype", "pk": 14, "fields": {"app_label": "auth", "model": "user"}}, {"model": "contenttypes.contenttype", "pk": 15, "fields": {"app_label": "contenttypes", "model": "contenttype"}}, {"model": "contenttypes.contenttype", "pk": 16, "fields": {"app_label": "sessions", "model": "session"}}, {"model": "contenttypes.contenttype", "pk": 17, "fields": {"app_label": "taggit", "model": "tag"}}, {"model": "contenttypes.contenttype", "pk": 18, "fields": {"app_label": "taggit", "model": "taggeditem"}}, {"model": "contenttypes.contenttype", "pk": 19, "fields": {"app_label": "store", "model": "coupon"}}, {"model": "sessions.session", "pk": "3ejskich56rcfwkvhjyuxf4ik36voodx", "fields": {"session_data": "ZWJiZjA0NGQ3MDM1ZTJmYTE5OWM1MjZiMWQwNzEwY2I5NTY2OTRjNDp7ImNhcnQiOjE0fQ==", "expire_date": "2021-01-01T13:15:29.202Z"}}, {"model": "sessions.session", "pk": "3y9o4g08qdb08y1sio36bz1nuwrihxef", "fields": {"session_data": "MjVlNDdlMzdjZGM5YjdhNmJkNzdiMzE5N2I4N2M3MGJkOGE1M2NmYTp7ImNhcnQiOjE3fQ==", "expire_date": "2021-02-03T23:34:47.526Z"}}, {"model": "sessions.session", "pk": "4qqku9sbulwkqorjomp84z4kxuvbfdls", "fields": {"session_data": "NTc2NDdkNzkzNjU4NzVlMTM4YmNlMmM4M2VhYWE3NzEyZjg3OTU0ZDp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ZjhlNzc2OTQ2ZWRiYmNkNDkyZDk5ZmFlYWIyZmVkY2E0OWM4YjJlIn0=", "expire_date": "2020-12-25T13:34:57.915Z"}}, {"model": "sessions.session", "pk": "5rkja7i0bqjovj7osj3obphoor210nv5", "fields": {"session_data": "YWQwNjVmMTNjZWNjMzQzMjcyNjU4Y2RlMzhhZDNiOTM0MTZlYmI2Yzp7ImNhcnQiOjE4fQ==", "expire_date": "2021-02-05T12:58:04.617Z"}}, {"model": "sessions.session", "pk": "6s80xw3twxqkle8gqzr87rno0tncjptq", "fields": {"session_data": "M2QxOTM4MDU5MGJkNjY1MWJmNTYwYTAzNjI4OGJkZDE0ODhlMzdhYzp7ImNhcnQiOjEyfQ==", "expire_date": "2021-01-01T12:12:13.277Z"}}, {"model": "sessions.session", "pk": "81vvw2poi4zu61bnu00ahxol2ad6kjod", "fields": {"session_data": "ODEwYTZhMGMzZjhlYTYwMTg1ZjU5ZjU1ZThhNGJmYTcyNjNkYjZkMDp7ImNhcnQiOjE1fQ==", "expire_date": "2021-01-08T00:58:19.112Z"}}, {"model": "sessions.session", "pk": "9izsqqj0tn6mt5o00jbnh1un8a13ajf6", "fields": {"session_data": "NzMzM2JkODE4MTQzN2U5NDcyYzFhMTZjMzU0NDVkMzM2ZWMyMjMwNjp7ImNhcnQiOjh9", "expire_date": "2020-12-14T04:21:08.362Z"}}, {"model": "sessions.session", "pk": "9nzhbasvk9h592qd5w6s0r9dwg481rl5", "fields": {"session_data": "MmI2NDg0MDhhYTI3NWI4YzhkZTVmODU1ODNiNTgwMzNhNDc4ZTYyYTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI1NGVhNDZiNTk4YTE2ZDE4NTMwNGYxYTAxMDhlNTAyZmZhYzQ1NDRmIn0=", "expire_date": "2020-12-20T16:27:44.184Z"}}, {"model": "sessions.session", "pk": "edwpokrioinff8nqvzh5m4mbammfyuit", "fields": {"session_data": "YzIwYWNiNTBiZjM0YWY3Nzk3OWJmNDI3MDg5NzZkYzgxN2ZhMjM1ZDp7ImNhcnQiOjN9", "expire_date": "2020-11-21T19:17:02.707Z"}}, {"model": "sessions.session", "pk": "etcrae4nsly9rslgihyyds2q9nwnywn9", "fields": {"session_data": "MWFkZjdkNzk1Mjc4NjRlYmU3YThlMzE5NzNhMmEzMTU2ZjI0NjZiZDp7ImNhcnQiOjl9", "expire_date": "2020-12-18T03:34:08.686Z"}}, {"model": "sessions.session", "pk": "eu2w9nevjb3dh1jjw3l0blx97alin8xu", "fields": {"session_data": "MTZmNWJiNmRjZjIyM2QyOGYyNmYzOWJiNWEyMGE4YmJiN2UyMzljNDp7ImNhcnQiOjE5LCJfYXV0aF91c2VyX2lkIjoiMSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiNTRlYTQ2YjU5OGExNmQxODUzMDRmMWEwMTA4ZTUwMmZmYWM0NTQ0ZiJ9", "expire_date": "2021-02-07T03:24:38.699Z"}}, {"model": "sessions.session", "pk": "fx4povxl888mz2ueaohu1l1jhdeg4xno", "fields": {"session_data": "OWU5MGQxZTJjYzFjODBhYWJlYTNiNGNmZGNjNDJjZDZiNmI0NmE3Yjp7ImNhcnQiOjEwfQ==", "expire_date": "2020-12-26T15:20:31.436Z"}}, {"model": "sessions.session", "pk": "gx2mhcmz5etcbd5gg3dinki7nx9vwn52", "fields": {"session_data": "MmI2NDg0MDhhYTI3NWI4YzhkZTVmODU1ODNiNTgwMzNhNDc4ZTYyYTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI1NGVhNDZiNTk4YTE2ZDE4NTMwNGYxYTAxMDhlNTAyZmZhYzQ1NDRmIn0=", "expire_date": "2020-11-24T01:29:46.427Z"}}, {"model": "sessions.session", "pk": "jkp8s2p57djj4eaeyiksud8q08noyqei", "fields": {"session_data": "ODQwN2ViYmE2MDI3NTQ4ZTc5YzY5ZGQ0OGMwODUzZTIyODdiZTEyZDp7ImNhcnQiOjE2fQ==", "expire_date": "2021-02-01T02:45:35.990Z"}}, {"model": "sessions.session", "pk": "nl1lywr7xcxl1nxlbn3i02hb5y1tyano", "fields": {"session_data": "NGFjNDFiZjA2ODMyN2RmOWJkYTBhZjcwYmE2MmU0MzI1MTRhMzQ1Mjp7ImNhcnQiOjV9", "expire_date": "2020-11-28T21:34:31.247Z"}}, {"model": "sessions.session", "pk": "p91gpqfz0uf0guetgqd5nndbpe9tt5ha", "fields": {"session_data": "MjdiZjcyMTdkMjY0N2I2ZDUwYzk4ZTc3OTczMTE5OTMxNTFmMGJlMDp7ImNhcnQiOjd9", "expire_date": "2020-11-30T11:14:22.106Z"}}, {"model": "sessions.session", "pk": "q4utrln8ta9esxyvfl6pm69iajopyxu6", "fields": {"session_data": "NjI4ZmQyZTQ1ZDdiOGFmNmFmMDgxNDU4MmU2NDk3N2Y0MjA3YTAyMTp7ImNhcnQiOjExfQ==", "expire_date": "2020-12-26T15:20:39.085Z"}}, {"model": "sessions.session", "pk": "qx91njd3rb05anaytg3b9ufzgvi8rmri", "fields": {"session_data": "MDI1NWYyMDhkYzE1NTk0MTIxNTA2YjFhNzFhZWYxOGU0ZDg1NTg0NTp7ImNhcnQiOjJ9", "expire_date": "2020-11-20T18:21:16.897Z"}}, {"model": "sessions.session", "pk": "rn5740gl4husize66ef17f5aqzkz9u0k", "fields": {"session_data": "MmI2NDg0MDhhYTI3NWI4YzhkZTVmODU1ODNiNTgwMzNhNDc4ZTYyYTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI1NGVhNDZiNTk4YTE2ZDE4NTMwNGYxYTAxMDhlNTAyZmZhYzQ1NDRmIn0=", "expire_date": "2020-11-20T00:57:28.759Z"}}, {"model": "sessions.session", "pk": "tgsp4zcd2mfcq2jndehhwp708m87k39f", "fields": {"session_data": "NzM0NDY0YzIwMTY1ZmRmMmU1N2Q0ZDYyNzlhZmRjMTNmMjYwNmM4Yzp7ImNhcnQiOjZ9", "expire_date": "2020-11-30T02:35:14.350Z"}}, {"model": "sessions.session", "pk": "xc70r4pp03rqeve26au9awar1hesjrjv", "fields": {"session_data": "Mjg4MmI2NDJhNDkzMjBhMmYyNjlhOWY2YzgwNTU4ZWQ4ZDRhOWZmOTp7ImNhcnQiOjEzfQ==", "expire_date": "2021-01-01T12:52:35.456Z"}}, {"model": "auth.permission", "pk": 1, "fields": {"name": "Can add profile", "content_type": 1, "codename": "add_profile"}}, {"model": "auth.permission", "pk": 2, "fields": {"name": "Can change profile", "content_type": 1, "codename": "change_profile"}}, {"model": "auth.permission", "pk": 3, "fields": {"name": "Can delete profile", "content_type": 1, "codename": "delete_profile"}}, {"model": "auth.permission", "pk": 4, "fields": {"name": "Can view profile", "content_type": 1, "codename": "view_profile"}}, {"model": "auth.permission", "pk": 5, "fields": {"name": "Can add post", "content_type": 2, "codename": "add_post"}}, {"model": "auth.permission", "pk": 6, "fields": {"name": "Can change post", "content_type": 2, "codename": "change_post"}}, {"model": "auth.permission", "pk": 7, "fields": {"name": "Can delete post", "content_type": 2, "codename": "delete_post"}}, {"model": "auth.permission", "pk": 8, "fields": {"name": "Can view post", "content_type": 2, "codename": "view_post"}}, {"model": "auth.permission", "pk": 9, "fields": {"name": "Can add project", "content_type": 3, "codename": "add_project"}}, {"model": "auth.permission", "pk": 10, "fields": {"name": "Can change project", "content_type": 3, "codename": "change_project"}}, {"model": "auth.permission", "pk": 11, "fields": {"name": "Can delete project", "content_type": 3, "codename": "delete_project"}}, {"model": "auth.permission", "pk": 12, "fields": {"name": "Can view project", "content_type": 3, "codename": "view_project"}}, {"model": "auth.permission", "pk": 13, "fields": {"name": "Can add lead", "content_type": 4, "codename": "add_lead"}}, {"model": "auth.permission", "pk": 14, "fields": {"name": "Can change lead", "content_type": 4, "codename": "change_lead"}}, {"model": "auth.permission", "pk": 15, "fields": {"name": "Can delete lead", "content_type": 4, "codename": "delete_lead"}}, {"model": "auth.permission", "pk": 16, "fields": {"name": "Can view lead", "content_type": 4, "codename": "view_lead"}}, {"model": "auth.permission", "pk": 17, "fields": {"name": "Can add cart item", "content_type": 5, "codename": "add_cartitem"}}, {"model": "auth.permission", "pk": 18, "fields": {"name": "Can change cart item", "content_type": 5, "codename": "change_cartitem"}}, {"model": "auth.permission", "pk": 19, "fields": {"name": "Can delete cart item", "content_type": 5, "codename": "delete_cartitem"}}, {"model": "auth.permission", "pk": 20, "fields": {"name": "Can view cart item", "content_type": 5, "codename": "view_cartitem"}}, {"model": "auth.permission", "pk": 21, "fields": {"name": "Can add cart", "content_type": 6, "codename": "add_cart"}}, {"model": "auth.permission", "pk": 22, "fields": {"name": "Can change cart", "content_type": 6, "codename": "change_cart"}}, {"model": "auth.permission", "pk": 23, "fields": {"name": "Can delete cart", "content_type": 6, "codename": "delete_cart"}}, {"model": "auth.permission", "pk": 24, "fields": {"name": "Can view cart", "content_type": 6, "codename": "view_cart"}}, {"model": "auth.permission", "pk": 25, "fields": {"name": "Can add product", "content_type": 7, "codename": "add_product"}}, {"model": "auth.permission", "pk": 26, "fields": {"name": "Can change product", "content_type": 7, "codename": "change_product"}}, {"model": "auth.permission", "pk": 27, "fields": {"name": "Can delete product", "content_type": 7, "codename": "delete_product"}}, {"model": "auth.permission", "pk": 28, "fields": {"name": "Can view product", "content_type": 7, "codename": "view_product"}}, {"model": "auth.permission", "pk": 29, "fields": {"name": "Can add billing address", "content_type": 8, "codename": "add_billingaddress"}}, {"model": "auth.permission", "pk": 30, "fields": {"name": "Can change billing address", "content_type": 8, "codename": "change_billingaddress"}}, {"model": "auth.permission", "pk": 31, "fields": {"name": "Can delete billing address", "content_type": 8, "codename": "delete_billingaddress"}}, {"model": "auth.permission", "pk": 32, "fields": {"name": "Can view billing address", "content_type": 8, "codename": "view_billingaddress"}}, {"model": "auth.permission", "pk": 33, "fields": {"name": "Can add shipping address", "content_type": 9, "codename": "add_shippingaddress"}}, {"model": "auth.permission", "pk": 34, "fields": {"name": "Can change shipping address", "content_type": 9, "codename": "change_shippingaddress"}}, {"model": "auth.permission", "pk": 35, "fields": {"name": "Can delete shipping address", "content_type": 9, "codename": "delete_shippingaddress"}}, {"model": "auth.permission", "pk": 36, "fields": {"name": "Can view shipping address", "content_type": 9, "codename": "view_shippingaddress"}}, {"model": "auth.permission", "pk": 37, "fields": {"name": "Can add contact info", "content_type": 10, "codename": "add_contactinfo"}}, {"model": "auth.permission", "pk": 38, "fields": {"name": "Can change contact info", "content_type": 10, "codename": "change_contactinfo"}}, {"model": "auth.permission", "pk": 39, "fields": {"name": "Can delete contact info", "content_type": 10, "codename": "delete_contactinfo"}}, {"model": "auth.permission", "pk": 40, "fields": {"name": "Can view contact info", "content_type": 10, "codename": "view_contactinfo"}}, {"model": "auth.permission", "pk": 41, "fields": {"name": "Can add log entry", "content_type": 11, "codename": "add_logentry"}}, {"model": "auth.permission", "pk": 42, "fields": {"name": "Can change log entry", "content_type": 11, "codename": "change_logentry"}}, {"model": "auth.permission", "pk": 43, "fields": {"name": "Can delete log entry", "content_type": 11, "codename": "delete_logentry"}}, {"model": "auth.permission", "pk": 44, "fields": {"name": "Can view log entry", "content_type": 11, "codename": "view_logentry"}}, {"model": "auth.permission", "pk": 45, "fields": {"name": "Can add permission", "content_type": 12, "codename": "add_permission"}}, {"model": "auth.permission", "pk": 46, "fields": {"name": "Can change permission", "content_type": 12, "codename": "change_permission"}}, {"model": "auth.permission", "pk": 47, "fields": {"name": "Can delete permission", "content_type": 12, "codename": "delete_permission"}}, {"model": "auth.permission", "pk": 48, "fields": {"name": "Can view permission", "content_type": 12, "codename": "view_permission"}}, {"model": "auth.permission", "pk": 49, "fields": {"name": "Can add group", "content_type": 13, "codename": "add_group"}}, {"model": "auth.permission", "pk": 50, "fields": {"name": "Can change group", "content_type": 13, "codename": "change_group"}}, {"model": "auth.permission", "pk": 51, "fields": {"name": "Can delete group", "content_type": 13, "codename": "delete_group"}}, {"model": "auth.permission", "pk": 52, "fields": {"name": "Can view group", "content_type": 13, "codename": "view_group"}}, {"model": "auth.permission", "pk": 53, "fields": {"name": "Can add user", "content_type": 14, "codename": "add_user"}}, {"model": "auth.permission", "pk": 54, "fields": {"name": "Can change user", "content_type": 14, "codename": "change_user"}}, {"model": "auth.permission", "pk": 55, "fields": {"name": "Can delete user", "content_type": 14, "codename": "delete_user"}}, {"model": "auth.permission", "pk": 56, "fields": {"name": "Can view user", "content_type": 14, "codename": "view_user"}}, {"model": "auth.permission", "pk": 57, "fields": {"name": "Can add content type", "content_type": 15, "codename": "add_contenttype"}}, {"model": "auth.permission", "pk": 58, "fields": {"name": "Can change content type", "content_type": 15, "codename": "change_contenttype"}}, {"model": "auth.permission", "pk": 59, "fields": {"name": "Can delete content type", "content_type": 15, "codename": "delete_contenttype"}}, {"model": "auth.permission", "pk": 60, "fields": {"name": "Can view content type", "content_type": 15, "codename": "view_contenttype"}}, {"model": "auth.permission", "pk": 61, "fields": {"name": "Can add session", "content_type": 16, "codename": "add_session"}}, {"model": "auth.permission", "pk": 62, "fields": {"name": "Can change session", "content_type": 16, "codename": "change_session"}}, {"model": "auth.permission", "pk": 63, "fields": {"name": "Can delete session", "content_type": 16, "codename": "delete_session"}}, {"model": "auth.permission", "pk": 64, "fields": {"name": "Can view session", "content_type": 16, "codename": "view_session"}}, {"model": "auth.permission", "pk": 65, "fields": {"name": "Can add tag", "content_type": 17, "codename": "add_tag"}}, {"model": "auth.permission", "pk": 66, "fields": {"name": "Can change tag", "content_type": 17, "codename": "change_tag"}}, {"model": "auth.permission", "pk": 67, "fields": {"name": "Can delete tag", "content_type": 17, "codename": "delete_tag"}}, {"model": "auth.permission", "pk": 68, "fields": {"name": "Can view tag", "content_type": 17, "codename": "view_tag"}}, {"model": "auth.permission", "pk": 69, "fields": {"name": "Can add tagged item", "content_type": 18, "codename": "add_taggeditem"}}, {"model": "auth.permission", "pk": 70, "fields": {"name": "Can change tagged item", "content_type": 18, "codename": "change_taggeditem"}}, {"model": "auth.permission", "pk": 71, "fields": {"name": "Can delete tagged item", "content_type": 18, "codename": "delete_taggeditem"}}, {"model": "auth.permission", "pk": 72, "fields": {"name": "Can view tagged item", "content_type": 18, "codename": "view_taggeditem"}}, {"model": "auth.permission", "pk": 73, "fields": {"name": "Can add coupon", "content_type": 19, "codename": "add_coupon"}}, {"model": "auth.permission", "pk": 74, "fields": {"name": "Can change coupon", "content_type": 19, "codename": "change_coupon"}}, {"model": "auth.permission", "pk": 75, "fields": {"name": "Can delete coupon", "content_type": 19, "codename": "delete_coupon"}}, {"model": "auth.permission", "pk": 76, "fields": {"name": "Can view coupon", "content_type": 19, "codename": "view_coupon"}}, {"model": "auth.user", "pk": 1, "fields": {"password": "pbkdf2_sha256$180000$zuTl4RL2TRfQ$SJc4Y0m404N05TDZXMmHs/c4Ihm6IiEhqGcT30CaO4E=", "last_login": "2021-01-24T03:24:38.695Z", "is_superuser": true, "username": "npan", "first_name": "", "last_name": "", "email": "noahpan323@gmail.com", "is_staff": true, "is_active": true, "date_joined": "2020-10-25T21:09:19.108Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 2, "fields": {"password": "pbkdf2_sha256$180000$ZGWo0on8raRX$VUMh82p3FLqXHsVMh89P1djLF7wfQtUd7d4DAmjf56M=", "last_login": "2020-12-11T13:34:57.911Z", "is_superuser": false, "username": "CarlosCam", "first_name": "", "last_name": "", "email": "carlosgrebt@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2020-12-11T13:34:56.199Z", "groups": [], "user_permissions": []}}, {"model": "admin.logentry", "pk": 1, "fields": {"action_time": "2020-11-06T01:44:34.542Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "Test Product 19.99", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 2, "fields": {"action_time": "2020-11-06T03:51:05.127Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "Eddie 19.99", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Name\", \"Description\"]}}]"}}, {"model": "admin.logentry", "pk": 3, "fields": {"action_time": "2020-11-13T20:01:11.238Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "Light Vader 24.99", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 4, "fields": {"action_time": "2020-11-14T17:07:10.744Z", "user": 1, "content_type": 19, "object_id": "1", "object_repr": "GET_FIFTEEN", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 5, "fields": {"action_time": "2020-11-14T17:07:54.658Z", "user": 1, "content_type": 6, "object_id": "3", "object_repr": "None Order (1 Items): Open", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 6, "fields": {"action_time": "2020-11-14T17:07:54.663Z", "user": 1, "content_type": 6, "object_id": "2", "object_repr": "None Order (1 Items): Open", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 7, "fields": {"action_time": "2020-11-14T17:07:54.667Z", "user": 1, "content_type": 6, "object_id": "1", "object_repr": "npan Order (1 Items): Open", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 8, "fields": {"action_time": "2020-12-14T17:42:59.487Z", "user": 1, "content_type": 2, "object_id": "6", "object_repr": "asd", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 9, "fields": {"action_time": "2020-12-14T17:43:06.400Z", "user": 1, "content_type": 2, "object_id": "6", "object_repr": "asd", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 10, "fields": {"action_time": "2020-12-14T17:43:39.164Z", "user": 1, "content_type": 7, "object_id": "3", "object_repr": "Speaker Stand 12", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 11, "fields": {"action_time": "2021-01-24T04:08:45.935Z", "user": 1, "content_type": 5, "object_id": "21", "object_repr": "Light Vader", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 12, "fields": {"action_time": "2021-01-24T04:08:45.942Z", "user": 1, "content_type": 5, "object_id": "20", "object_repr": "Eddie", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 13, "fields": {"action_time": "2021-01-24T04:08:45.944Z", "user": 1, "content_type": 5, "object_id": "19", "object_repr": "Light Vader", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 14, "fields": {"action_time": "2021-01-24T04:08:45.945Z", "user": 1, "content_type": 5, "object_id": "18", "object_repr": "Light Vader", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 15, "fields": {"action_time": "2021-01-24T04:08:45.947Z", "user": 1, "content_type": 5, "object_id": "16", "object_repr": "Eddie", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 16, "fields": {"action_time": "2021-01-24T04:08:45.948Z", "user": 1, "content_type": 5, "object_id": "15", "object_repr": "Speaker Stand", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 17, "fields": {"action_time": "2021-01-24T04:08:45.950Z", "user": 1, "content_type": 5, "object_id": "14", "object_repr": "Light Vader", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 18, "fields": {"action_time": "2021-01-24T04:08:45.951Z", "user": 1, "content_type": 5, "object_id": "13", "object_repr": "Light Vader", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 19, "fields": {"action_time": "2021-01-24T04:08:45.952Z", "user": 1, "content_type": 5, "object_id": "12", "object_repr": "Eddie", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 20, "fields": {"action_time": "2021-01-24T04:08:45.953Z", "user": 1, "content_type": 5, "object_id": "11", "object_repr": "Eddie", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 21, "fields": {"action_time": "2021-01-24T04:08:45.954Z", "user": 1, "content_type": 5, "object_id": "10", "object_repr": "Light Vader", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 22, "fields": {"action_time": "2021-01-24T04:08:45.955Z", "user": 1, "content_type": 5, "object_id": "9", "object_repr": "Eddie", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 23, "fields": {"action_time": "2021-01-24T04:08:45.956Z", "user": 1, "content_type": 5, "object_id": "8", "object_repr": "Light Vader", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 24, "fields": {"action_time": "2021-01-24T04:08:45.958Z", "user": 1, "content_type": 5, "object_id": "7", "object_repr": "Light Vader", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 25, "fields": {"action_time": "2021-01-24T04:08:45.959Z", "user": 1, "content_type": 5, "object_id": "6", "object_repr": "Eddie", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 26, "fields": {"action_time": "2021-01-24T04:08:54.580Z", "user": 1, "content_type": 6, "object_id": "19", "object_repr": "None Order (0 Items): Open", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 27, "fields": {"action_time": "2021-01-24T04:08:54.584Z", "user": 1, "content_type": 6, "object_id": "18", "object_repr": "None Order (0 Items): Open", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 28, "fields": {"action_time": "2021-01-24T04:08:54.588Z", "user": 1, "content_type": 6, "object_id": "17", "object_repr": "None Order (0 Items): Open", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 29, "fields": {"action_time": "2021-01-24T04:08:54.592Z", "user": 1, "content_type": 6, "object_id": "16", "object_repr": "None Order (0 Items): Open", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 30, "fields": {"action_time": "2021-01-24T04:08:54.594Z", "user": 1, "content_type": 6, "object_id": "15", "object_repr": "None Order (0 Items): Open", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 31, "fields": {"action_time": "2021-01-24T04:08:54.597Z", "user": 1, "content_type": 6, "object_id": "14", "object_repr": "None Order (0 Items): Open", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 32, "fields": {"action_time": "2021-01-24T04:08:54.600Z", "user": 1, "content_type": 6, "object_id": "13", "object_repr": "None Order (0 Items): Open", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 33, "fields": {"action_time": "2021-01-24T04:08:54.602Z", "user": 1, "content_type": 6, "object_id": "12", "object_repr": "None Order (0 Items): Open", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 34, "fields": {"action_time": "2021-01-24T04:08:54.604Z", "user": 1, "content_type": 6, "object_id": "11", "object_repr": "None Order (0 Items): Open", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 35, "fields": {"action_time": "2021-01-24T04:08:54.613Z", "user": 1, "content_type": 6, "object_id": "10", "object_repr": "None Order (0 Items): Open", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 36, "fields": {"action_time": "2021-01-24T04:08:54.616Z", "user": 1, "content_type": 6, "object_id": "9", "object_repr": "None Order (0 Items): Open", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 37, "fields": {"action_time": "2021-01-24T04:08:54.618Z", "user": 1, "content_type": 6, "object_id": "8", "object_repr": "None Order (0 Items): Open", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 38, "fields": {"action_time": "2021-01-24T04:08:54.621Z", "user": 1, "content_type": 6, "object_id": "7", "object_repr": "None Order (0 Items): Open", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 39, "fields": {"action_time": "2021-01-24T04:08:54.623Z", "user": 1, "content_type": 6, "object_id": "6", "object_repr": "None Order (0 Items): Open", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 40, "fields": {"action_time": "2021-01-24T04:08:54.626Z", "user": 1, "content_type": 6, "object_id": "5", "object_repr": "None Order (0 Items): Open", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 41, "fields": {"action_time": "2021-01-24T04:08:54.628Z", "user": 1, "content_type": 6, "object_id": "4", "object_repr": "npan Order (0 Items): Open", "action_flag": 3, "change_message": ""}}]